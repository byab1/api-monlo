<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'DoctrineNamespaceCacheKey%5B%5D' => 0,
'%5BApp%5CEntity%5CFacture%24CLASSMETADATA%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CGalerie%24CLASSMETADATA%5D%5B1%5D' => 2,
'%5BApp%5CEntity%5CPackage%24CLASSMETADATA%5D%5B1%5D' => 3,
'%5BApp%5CEntity%5CPropriete%24CLASSMETADATA%5D%5B1%5D' => 4,
'%5BApp%5CEntity%5CTypePackage%24CLASSMETADATA%5D%5B1%5D' => 5,
'%5BApp%5CEntity%5CUser%24CLASSMETADATA%5D%5B1%5D' => 6,

], [

0 => 'N;',
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Facture',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Facture',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\FactureRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'montantFacture' => [
                            'fieldName' => 'montantFacture',
                            'type' => 'float',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'montant_facture',
                        ],
                        'numFacture' => [
                            'fieldName' => 'numFacture',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'num_facture',
                        ],
                        'apercu' => [
                            'fieldName' => 'apercu',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'apercu',
                        ],
                        'statutFacture' => [
                            'fieldName' => 'statutFacture',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'statut_facture',
                        ],
                        'envoyeLe' => [
                            'fieldName' => 'envoyeLe',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'envoye_le',
                        ],
                        'modifieLe' => [
                            'fieldName' => 'modifieLe',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'modifie_le',
                        ],
                        'supprimerLe' => [
                            'fieldName' => 'supprimerLe',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'supprimer_le',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'montant_facture' => 'montantFacture',
                        'num_facture' => 'numFacture',
                        'apercu' => 'apercu',
                        'statut_facture' => 'statutFacture',
                        'envoye_le' => 'envoyeLe',
                        'modifie_le' => 'modifieLe',
                        'supprimer_le' => 'supprimerLe',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'montantFacture' => 'montant_facture',
                        'numFacture' => 'num_facture',
                        'apercu' => 'apercu',
                        'statutFacture' => 'statut_facture',
                        'envoyeLe' => 'envoye_le',
                        'modifieLe' => 'modifie_le',
                        'supprimerLe' => 'supprimer_le',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'facture',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'unique' => false,
                                    'nullable' => true,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'facture',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Facture',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Galerie',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Galerie',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\GalerieRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'url' => [
                            'fieldName' => 'url',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'url',
                        ],
                        'caption' => [
                            'fieldName' => 'caption',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'caption',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'url' => 'url',
                        'caption' => 'caption',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'url' => 'url',
                        'caption' => 'caption',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'galerie',
                    ],
                ],
                'associationMappings' => [
                    [
                        'propriete' => [
                            'fieldName' => 'propriete',
                            'joinColumns' => [
                                [
                                    'name' => 'propriete_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'galeries',
                            'targetEntity' => 'App\\Entity\\Propriete',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Galerie',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'propriete_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'propriete_id' => 'propriete_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'propriete_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Package',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Package',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PackageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomPackage' => [
                            'fieldName' => 'nomPackage',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nom_package',
                        ],
                        'prixPackage' => [
                            'fieldName' => 'prixPackage',
                            'type' => 'float',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'prix_package',
                        ],
                        'dateExpiration' => [
                            'fieldName' => 'dateExpiration',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'date_expiration',
                        ],
                        'nbrPropriete' => [
                            'fieldName' => 'nbrPropriete',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nbr_propriete',
                        ],
                        'nbVedetProp' => [
                            'fieldName' => 'nbVedetProp',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nb_vedet_prop',
                        ],
                        'desProp' => [
                            'fieldName' => 'desProp',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'des_prop',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'etat',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_package' => 'nomPackage',
                        'prix_package' => 'prixPackage',
                        'date_expiration' => 'dateExpiration',
                        'nbr_propriete' => 'nbrPropriete',
                        'nb_vedet_prop' => 'nbVedetProp',
                        'des_prop' => 'desProp',
                        'etat' => 'etat',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomPackage' => 'nom_package',
                        'prixPackage' => 'prix_package',
                        'dateExpiration' => 'date_expiration',
                        'nbrPropriete' => 'nbr_propriete',
                        'nbVedetProp' => 'nb_vedet_prop',
                        'desProp' => 'des_prop',
                        'etat' => 'etat',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'package',
                    ],
                ],
                'associationMappings' => [
                    [
                        'typePackage' => [
                            'fieldName' => 'typePackage',
                            'joinColumns' => [
                                [
                                    'name' => 'type_package_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'package',
                            'targetEntity' => 'App\\Entity\\TypePackage',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Package',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_package_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_package_id' => 'type_package_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_package_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Propriete',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Propriete',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProprieteRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomPropriete' => [
                            'fieldName' => 'nomPropriete',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nom_propriete',
                        ],
                        'desPropriete' => [
                            'fieldName' => 'desPropriete',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'des_propriete',
                        ],
                        'adrPropriete' => [
                            'fieldName' => 'adrPropriete',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'adr_propriete',
                        ],
                        'localisation' => [
                            'fieldName' => 'localisation',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'localisation',
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'ville',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'etat',
                        ],
                        'commune' => [
                            'fieldName' => 'commune',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'commune',
                        ],
                        'dateAjout' => [
                            'fieldName' => 'dateAjout',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'date_ajout',
                        ],
                        'dateModifPropriete' => [
                            'fieldName' => 'dateModifPropriete',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'date_modif_propriete',
                        ],
                        'superficie' => [
                            'fieldName' => 'superficie',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'superficie',
                        ],
                        'statut' => [
                            'fieldName' => 'statut',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'statut',
                        ],
                        'photoPropriete' => [
                            'fieldName' => 'photoPropriete',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'photo_propriete',
                        ],
                        'video' => [
                            'fieldName' => 'video',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'video',
                        ],
                        'tourVirtuel' => [
                            'fieldName' => 'tourVirtuel',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'tour_virtuel',
                        ],
                        'walkscore' => [
                            'fieldName' => 'walkscore',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'walkscore',
                        ],
                        'requete' => [
                            'fieldName' => 'requete',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'requete',
                        ],
                        'vues' => [
                            'fieldName' => 'vues',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'vues',
                        ],
                        'nbrPiece' => [
                            'fieldName' => 'nbrPiece',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'nbr_piece',
                        ],
                        'salleEau' => [
                            'fieldName' => 'salleEau',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'salle_eau',
                        ],
                        'piscine' => [
                            'fieldName' => 'piscine',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'piscine',
                        ],
                        'panneauSolaire' => [
                            'fieldName' => 'panneauSolaire',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'panneau_solaire',
                        ],
                        'garage' => [
                            'fieldName' => 'garage',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'garage',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'type',
                        ],
                        'spa' => [
                            'fieldName' => 'spa',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'spa',
                        ],
                        'prix' => [
                            'fieldName' => 'prix',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'prix',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_propriete' => 'nomPropriete',
                        'des_propriete' => 'desPropriete',
                        'adr_propriete' => 'adrPropriete',
                        'localisation' => 'localisation',
                        'ville' => 'ville',
                        'etat' => 'etat',
                        'commune' => 'commune',
                        'date_ajout' => 'dateAjout',
                        'date_modif_propriete' => 'dateModifPropriete',
                        'superficie' => 'superficie',
                        'statut' => 'statut',
                        'photo_propriete' => 'photoPropriete',
                        'video' => 'video',
                        'tour_virtuel' => 'tourVirtuel',
                        'walkscore' => 'walkscore',
                        'requete' => 'requete',
                        'vues' => 'vues',
                        'nbr_piece' => 'nbrPiece',
                        'salle_eau' => 'salleEau',
                        'piscine' => 'piscine',
                        'panneau_solaire' => 'panneauSolaire',
                        'garage' => 'garage',
                        'type' => 'type',
                        'spa' => 'spa',
                        'prix' => 'prix',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomPropriete' => 'nom_propriete',
                        'desPropriete' => 'des_propriete',
                        'adrPropriete' => 'adr_propriete',
                        'localisation' => 'localisation',
                        'ville' => 'ville',
                        'etat' => 'etat',
                        'commune' => 'commune',
                        'dateAjout' => 'date_ajout',
                        'dateModifPropriete' => 'date_modif_propriete',
                        'superficie' => 'superficie',
                        'statut' => 'statut',
                        'photoPropriete' => 'photo_propriete',
                        'video' => 'video',
                        'tourVirtuel' => 'tour_virtuel',
                        'walkscore' => 'walkscore',
                        'requete' => 'requete',
                        'vues' => 'vues',
                        'nbrPiece' => 'nbr_piece',
                        'salleEau' => 'salle_eau',
                        'piscine' => 'piscine',
                        'panneauSolaire' => 'panneau_solaire',
                        'garage' => 'garage',
                        'type' => 'type',
                        'spa' => 'spa',
                        'prix' => 'prix',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'propriete',
                    ],
                ],
                'associationMappings' => [
                    [
                        'galeries' => [
                            'fieldName' => 'galeries',
                            'mappedBy' => 'propriete',
                            'targetEntity' => 'App\\Entity\\Galerie',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Propriete',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'proprietes',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Propriete',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TypePackage',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\TypePackage',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TypePackageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomTypePackage' => [
                            'fieldName' => 'nomTypePackage',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nom_type_package',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_type_package' => 'nomTypePackage',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomTypePackage' => 'nom_type_package',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'type_package',
                    ],
                ],
                'associationMappings' => [
                    [
                        'package' => [
                            'fieldName' => 'package',
                            'mappedBy' => 'typePackage',
                            'targetEntity' => 'App\\Entity\\Package',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\TypePackage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'users' => [
                            'fieldName' => 'users',
                            'mappedBy' => 'typePackage',
                            'targetEntity' => 'App\\Entity\\User',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\TypePackage',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'email',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'nom',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'prenom',
                        ],
                        'adresse' => [
                            'fieldName' => 'adresse',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'adresse',
                        ],
                        'telephone' => [
                            'fieldName' => 'telephone',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'telephone',
                        ],
                        'logo' => [
                            'fieldName' => 'logo',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'logo',
                        ],
                        'cote' => [
                            'fieldName' => 'cote',
                            'type' => 'integer',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'cote',
                        ],
                        'accreditation' => [
                            'fieldName' => 'accreditation',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => 191,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'accreditation',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'etat',
                        ],
                        'dateCreation' => [
                            'fieldName' => 'dateCreation',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'date_creation',
                        ],
                        'dateModification' => [
                            'fieldName' => 'dateModification',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'date_modification',
                        ],
                        'dateSuppression' => [
                            'fieldName' => 'dateSuppression',
                            'type' => 'datetime',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => 0,
                            'columnName' => 'date_suppression',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => 0,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => 0,
                            'columnName' => 'password',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'adresse' => 'adresse',
                        'telephone' => 'telephone',
                        'logo' => 'logo',
                        'cote' => 'cote',
                        'accreditation' => 'accreditation',
                        'etat' => 'etat',
                        'date_creation' => 'dateCreation',
                        'date_modification' => 'dateModification',
                        'date_suppression' => 'dateSuppression',
                        'roles' => 'roles',
                        'password' => 'password',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'adresse' => 'adresse',
                        'telephone' => 'telephone',
                        'logo' => 'logo',
                        'cote' => 'cote',
                        'accreditation' => 'accreditation',
                        'etat' => 'etat',
                        'dateCreation' => 'date_creation',
                        'dateModification' => 'date_modification',
                        'dateSuppression' => 'date_suppression',
                        'roles' => 'roles',
                        'password' => 'password',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'proprietes' => [
                            'fieldName' => 'proprietes',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Propriete',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'facture' => [
                            'fieldName' => 'facture',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Facture',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'typePackage' => [
                            'fieldName' => 'typePackage',
                            'joinColumns' => [
                                [
                                    'name' => 'type_package_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'users',
                            'targetEntity' => 'App\\Entity\\TypePackage',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_package_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_package_id' => 'type_package_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_package_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
