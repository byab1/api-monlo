<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\User' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\User' . "\0" . 'logo', '' . "\0" . 'App\\Entity\\User' . "\0" . 'cote', '' . "\0" . 'App\\Entity\\User' . "\0" . 'accreditation', '' . "\0" . 'App\\Entity\\User' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateModification', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateSuppression', '' . "\0" . 'App\\Entity\\User' . "\0" . 'proprietes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'facture', '' . "\0" . 'App\\Entity\\User' . "\0" . 'typePackage'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenom', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adresse', '' . "\0" . 'App\\Entity\\User' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\User' . "\0" . 'logo', '' . "\0" . 'App\\Entity\\User' . "\0" . 'cote', '' . "\0" . 'App\\Entity\\User' . "\0" . 'accreditation', '' . "\0" . 'App\\Entity\\User' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateCreation', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateModification', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateSuppression', '' . "\0" . 'App\\Entity\\User' . "\0" . 'proprietes', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'facture', '' . "\0" . 'App\\Entity\\User' . "\0" . 'typePackage'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTotalAmount(): float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalAmount', []);

        return parent::getTotalAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalUnpaidAmount(): float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalUnpaidAmount', []);

        return parent::getTotalUnpaidAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse(string $adresse): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(string $prenom): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getCote(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCote', []);

        return parent::getCote();
    }

    /**
     * {@inheritDoc}
     */
    public function setCote(int $cote): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCote', [$cote]);

        return parent::setCote($cote);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone(string $telephone): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo(string $logo): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(bool $etat): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccreditation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccreditation', []);

        return parent::getAccreditation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccreditation(string $accreditation): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccreditation', [$accreditation]);

        return parent::setAccreditation($accreditation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', []);

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation(\DateTimeInterface $dateCreation): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', [$dateCreation]);

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModification(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModification', []);

        return parent::getDateModification();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModification(\DateTimeInterface $dateModification): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModification', [$dateModification]);

        return parent::setDateModification($dateModification);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateSuppression(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateSuppression', []);

        return parent::getDateSuppression();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateSuppression(\DateTimeInterface $dateSuppression): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateSuppression', [$dateSuppression]);

        return parent::setDateSuppression($dateSuppression);
    }

    /**
     * {@inheritDoc}
     */
    public function getProprietes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProprietes', []);

        return parent::getProprietes();
    }

    /**
     * {@inheritDoc}
     */
    public function addPropriete(\App\Entity\Propriete $propriete): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPropriete', [$propriete]);

        return parent::addPropriete($propriete);
    }

    /**
     * {@inheritDoc}
     */
    public function removePropriete(\App\Entity\Propriete $propriete): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePropriete', [$propriete]);

        return parent::removePropriete($propriete);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getFacture(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacture', []);

        return parent::getFacture();
    }

    /**
     * {@inheritDoc}
     */
    public function addFacture(\App\Entity\Facture $facture): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFacture', [$facture]);

        return parent::addFacture($facture);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFacture(\App\Entity\Facture $facture): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFacture', [$facture]);

        return parent::removeFacture($facture);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypePackage(): ?\App\Entity\TypePackage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypePackage', []);

        return parent::getTypePackage();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypePackage(?\App\Entity\TypePackage $typePackage): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypePackage', [$typePackage]);

        return parent::setTypePackage($typePackage);
    }

}
