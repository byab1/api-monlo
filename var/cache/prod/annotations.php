<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%5D%5B1%5D' => 1,
'%5BApp%5CEntity%5CFacture%23getId%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getMontantFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setMontantFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getNumFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setNumFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getApercu%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setApercu%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getStatutFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setStatutFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getEnvoyeLe%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setEnvoyeLe%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getModifieLe%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setModifieLe%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getSupprimerLe%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setSupprimerLe%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23getUser%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%23setUser%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CFacture%24id%5D%5B1%5D' => 2,
'%5BApp%5CEntity%5CFacture%24montantFacture%5D%5B1%5D' => 3,
'%5BApp%5CEntity%5CFacture%24numFacture%5D%5B1%5D' => 4,
'%5BApp%5CEntity%5CFacture%24apercu%5D%5B1%5D' => 5,
'%5BApp%5CEntity%5CFacture%24statutFacture%5D%5B1%5D' => 6,
'%5BApp%5CEntity%5CFacture%24envoyeLe%5D%5B1%5D' => 7,
'%5BApp%5CEntity%5CFacture%24modifieLe%5D%5B1%5D' => 8,
'%5BApp%5CEntity%5CFacture%24supprimerLe%5D%5B1%5D' => 8,
'%5BApp%5CEntity%5CFacture%24user%5D%5B1%5D' => 9,
'%5BApp%5CEntity%5CGalerie%5D%5B1%5D' => 10,
'%5BApp%5CEntity%5CGalerie%23getId%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CGalerie%23getUrl%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CGalerie%23setUrl%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CGalerie%23getCaption%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CGalerie%23setCaption%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CGalerie%23getPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CGalerie%23setPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CGalerie%24id%5D%5B1%5D' => 11,
'%5BApp%5CEntity%5CGalerie%24url%5D%5B1%5D' => 12,
'%5BApp%5CEntity%5CGalerie%24caption%5D%5B1%5D' => 13,
'%5BApp%5CEntity%5CGalerie%24propriete%5D%5B1%5D' => 14,
'%5BApp%5CEntity%5CPackage%5D%5B1%5D' => 15,
'%5BApp%5CEntity%5CPackage%23getId%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getNomPackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setNomPackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getPrixPackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setPrixPackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getDateExpiration%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setDateExpiration%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getNbrPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setNbrPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getNbVedetProp%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setNbVedetProp%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getDesProp%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setDesProp%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getEtat%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setEtat%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23getTypePackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%23setTypePackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPackage%24id%5D%5B1%5D' => 16,
'%5BApp%5CEntity%5CPackage%24nomPackage%5D%5B1%5D' => 17,
'%5BApp%5CEntity%5CPackage%24prixPackage%5D%5B1%5D' => 18,
'%5BApp%5CEntity%5CPackage%24dateExpiration%5D%5B1%5D' => 19,
'%5BApp%5CEntity%5CPackage%24nbrPropriete%5D%5B1%5D' => 20,
'%5BApp%5CEntity%5CPackage%24nbVedetProp%5D%5B1%5D' => 21,
'%5BApp%5CEntity%5CPackage%24desProp%5D%5B1%5D' => 22,
'%5BApp%5CEntity%5CPackage%24etat%5D%5B1%5D' => 23,
'%5BApp%5CEntity%5CPackage%24typePackage%5D%5B1%5D' => 24,
'%5BApp%5CEntity%5CPropriete%5D%5B1%5D' => 25,
'%5BApp%5CEntity%5CPropriete%23__construct%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getId%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getNomPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setNomPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getDesPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setDesPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getAdrPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setAdrPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getLocalisation%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setLocalisation%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getVille%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setVille%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getEtat%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setEtat%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getCommune%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setCommune%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getDateAjout%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setDateAjout%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getDateModifPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setDateModifPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getSuperficie%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setSuperficie%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getStatut%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setStatut%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getPhotoPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setPhotoPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getVideo%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setVideo%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getTourVirtuel%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setTourVirtuel%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getWalkscore%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setWalkscore%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getRequete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setRequete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getVues%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setVues%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getGaleries%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23addGalery%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23removeGalery%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getUser%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setUser%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getNbrPiece%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setNbrPiece%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getSalleEau%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setSalleEau%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getPiscine%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setPiscine%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getSpa%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setSpa%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getPanneauSolaire%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setPanneauSolaire%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getGarage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setGarage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getType%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setType%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23getPrix%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%23setPrix%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CPropriete%24id%5D%5B1%5D' => 26,
'%5BApp%5CEntity%5CPropriete%24nomPropriete%5D%5B1%5D' => 27,
'%5BApp%5CEntity%5CPropriete%24desPropriete%5D%5B1%5D' => 28,
'%5BApp%5CEntity%5CPropriete%24adrPropriete%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24localisation%5D%5B1%5D' => 30,
'%5BApp%5CEntity%5CPropriete%24ville%5D%5B1%5D' => 31,
'%5BApp%5CEntity%5CPropriete%24etat%5D%5B1%5D' => 32,
'%5BApp%5CEntity%5CPropriete%24commune%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24dateAjout%5D%5B1%5D' => 33,
'%5BApp%5CEntity%5CPropriete%24dateModifPropriete%5D%5B1%5D' => 33,
'%5BApp%5CEntity%5CPropriete%24superficie%5D%5B1%5D' => 34,
'%5BApp%5CEntity%5CPropriete%24statut%5D%5B1%5D' => 35,
'%5BApp%5CEntity%5CPropriete%24photoPropriete%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24video%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24tourVirtuel%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24walkscore%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24requete%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24vues%5D%5B1%5D' => 36,
'%5BApp%5CEntity%5CPropriete%24galeries%5D%5B1%5D' => 37,
'%5BApp%5CEntity%5CPropriete%24user%5D%5B1%5D' => 38,
'%5BApp%5CEntity%5CPropriete%24nbrPiece%5D%5B1%5D' => 36,
'%5BApp%5CEntity%5CPropriete%24salleEau%5D%5B1%5D' => 36,
'%5BApp%5CEntity%5CPropriete%24piscine%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24panneauSolaire%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24garage%5D%5B1%5D' => 29,
'%5BApp%5CEntity%5CPropriete%24type%5D%5B1%5D' => 39,
'%5BApp%5CEntity%5CPropriete%24spa%5D%5B1%5D' => 32,
'%5BApp%5CEntity%5CPropriete%24prix%5D%5B1%5D' => 40,
'%5BApp%5CEntity%5CTypePackage%5D%5B1%5D' => 41,
'%5BApp%5CEntity%5CTypePackage%23__construct%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23getId%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23getNomTypePackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23setNomTypePackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23getPackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23addPackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23removePackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23getUsers%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23addUser%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%23removeUser%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CTypePackage%24id%5D%5B1%5D' => 42,
'%5BApp%5CEntity%5CTypePackage%24nomTypePackage%5D%5B1%5D' => 43,
'%5BApp%5CEntity%5CTypePackage%24package%5D%5B1%5D' => 44,
'%5BApp%5CEntity%5CTypePackage%24users%5D%5B1%5D' => 45,
'%5BApp%5CEntity%5CUser%5D%5B1%5D' => 46,
'%5BApp%5CEntity%5CUser%23getTotalAmount%5D%5B1%5D' => 47,
'%5BApp%5CEntity%5CUser%23getTotalUnpaidAmount%5D%5B1%5D' => 47,
'%5BApp%5CEntity%5CUser%23__construct%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getId%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getEmail%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setEmail%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getNom%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setNom%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getAdresse%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setAdresse%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getPrenom%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setPrenom%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getCote%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setCote%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getTelephone%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setTelephone%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getLogo%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setLogo%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getEtat%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setEtat%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getAccreditation%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setAccreditation%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getDateCreation%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setDateCreation%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getDateModification%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setDateModification%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getDateSuppression%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setDateSuppression%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getProprietes%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23addPropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23removePropriete%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getUsername%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getRoles%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setRoles%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getPassword%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setPassword%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getSalt%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23eraseCredentials%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23addFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23removeFacture%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23getTypePackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%23setTypePackage%5D%5B1%5D' => 0,
'%5BApp%5CEntity%5CUser%24id%5D%5B1%5D' => 48,
'%5BApp%5CEntity%5CUser%24email%5D%5B1%5D' => 49,
'%5BApp%5CEntity%5CUser%24nom%5D%5B1%5D' => 50,
'%5BApp%5CEntity%5CUser%24prenom%5D%5B1%5D' => 51,
'%5BApp%5CEntity%5CUser%24adresse%5D%5B1%5D' => 52,
'%5BApp%5CEntity%5CUser%24telephone%5D%5B1%5D' => 53,
'%5BApp%5CEntity%5CUser%24logo%5D%5B1%5D' => 54,
'%5BApp%5CEntity%5CUser%24cote%5D%5B1%5D' => 55,
'%5BApp%5CEntity%5CUser%24accreditation%5D%5B1%5D' => 56,
'%5BApp%5CEntity%5CUser%24etat%5D%5B1%5D' => 57,
'%5BApp%5CEntity%5CUser%24dateCreation%5D%5B1%5D' => 58,
'%5BApp%5CEntity%5CUser%24dateModification%5D%5B1%5D' => 58,
'%5BApp%5CEntity%5CUser%24dateSuppression%5D%5B1%5D' => 58,
'%5BApp%5CEntity%5CUser%24proprietes%5D%5B1%5D' => 59,
'%5BApp%5CEntity%5CUser%24roles%5D%5B1%5D' => 60,
'%5BApp%5CEntity%5CUser%24password%5D%5B1%5D' => 61,
'%5BApp%5CEntity%5CUser%24facture%5D%5B1%5D' => 62,
'%5BApp%5CEntity%5CUser%24typePackage%5D%5B1%5D' => 63,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%5D%5B1%5D' => 0,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23setContainer%5D%5B1%5D' => 0,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction%5D%5B1%5D' => 0,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLitePlatform%5D%5B1%5D' => 0,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLServerPlatform%5D%5B1%5D' => 0,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform%5D%5B1%5D' => 0,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOraclePlatform%5D%5B1%5D' => 0,
'%5BDoctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24container%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionValue%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionValue%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromStatement%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassIdentifiersTypes%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionValue%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL%5D%5B1%5D' => 0,
'%5BDoctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__invoke%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23__construct%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23body%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23stylesheet%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24errorRenderer%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24profiler%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23__construct%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23homeAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23panelAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23toolbarAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchBarAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchResultsAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23phpinfoAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23openAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23getTemplateManager%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23denyAccessIfProfilerDisabled%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23renderWithCspNonces%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templateManager%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24generator%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24profiler%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24twig%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templates%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24cspHandler%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24baseDir%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23__construct%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23panelAction%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23getTraces%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24profiler%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24twig%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24matcher%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24routes%5D%5B1%5D' => 0,
'%5BSymfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24expressionLanguageProviders%5D%5B1%5D' => 0,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%5D%5B1%5D' => 0,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct%5D%5B1%5D' => 0,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports%5D%5B1%5D' => 0,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve%5D%5B1%5D' => 0,
'%5BSymfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage%5D%5B1%5D' => 0,

], [

0 => [],
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\FactureRepository',
                ],
                'attributes' => [
                    1 => [
                        'normalization_context' => [
                            'groups' => [
                                'lecture_facture',
                            ],
                        ],
                        'denormalization_context' => [
                            'disable_type_enforcement' => true,
                        ],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_facture',
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'float',
                    2 => 'numeric',
                ],
                'message' => [
                    1 => 'Le montant de la facture est obligatoire',
                    'Le montant de la facture doit être numérique',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_facture',
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                    2 => 'integer',
                ],
                'message' => [
                    1 => 'Le numéro de la facture est obligatoire',
                    'Le numéro de la facture doit être un nombre',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_facture',
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le statut de la facture est obligatoire',
                    'Le statut doit être SENT, PAID ou CANCELLED',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'choices' => [
                    2 => [
                        'SENT',
                        'PAID',
                        'CANCELLED',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'nullable' => [
                    true,
                ],
                'message' => [
                    2 => 'La date d\'envoie de la facture est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    'facture',
                ],
                'message' => [
                    3 => 'La facture doit avoir un utilisateur',
                ],
                'groups' => [
                    3 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\GalerieRepository',
                ],
                'attributes' => [
                    1 => [
                        'normalization_context' => [
                            'groups' => [
                                'lecture_galerie',
                            ],
                        ],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_galerie',
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    2 => 'L\'url est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_galerie',
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    2 => 'Ce champs est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_galerie',
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Propriete',
                ],
                'inversedBy' => [
                    'galeries',
                ],
                'message' => [
                    2 => 'La galerie doit etre attibuée à une proprieté',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_galerie',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\PackageRepository',
                ],
                'attributes' => [
                    1 => [
                        'normalization_context' => [
                            'groups' => [
                                'lecture_package',
                            ],
                        ],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    2 => 'Le nom du package est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'float',
                ],
                'message' => [
                    2 => 'Le prix du package est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'message' => [
                    2 => 'La date d\'expiration du package est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'message' => [
                    2 => 'Le nombre de proprieté du package est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    2 => 'La description du package est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'message' => [
                    2 => 'Ce champs est obligatoire',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TypePackage',
                ],
                'inversedBy' => [
                    'package',
                ],
                'message' => [
                    2 => 'Veuillez selectionnez le type de package',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_package',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\ProprieteRepository',
                ],
                'attributes' => [
                    1 => [
                        'order' => [
                            'dateAjout' => 'desc',
                        ],
                        'normalization_context' => [
                            'groups' => [
                                'lecture_propriete',
                            ],
                        ],
                    ],
                ],
                'filterClass' => [
                    2 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
                    'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\RangeFilter',
                    'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\OrderFilter',
                ],
                'properties' => [
                    2 => [
                        'localisation' => 'partial',
                        'ville' => 'partial',
                        'type' => 'exact',
                    ],
                    [
                        'prix',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
        ],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_propriete',
                        'lecture_galerie',
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le nom de la propriété est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_propriete',
                        'lecture_galerie',
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'La description de la propriété est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'La localisation de la propriété est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'La ville de la propriété est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_propriete',
                        'lecture_galerie',
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le statut de la propriété est obligatoire',
                    'Le statut doit être En vente ou en Location',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'choices' => [
                    2 => [
                        'En vente',
                        'Location',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'propriete',
                ],
                'targetEntity' => [
                    'App\\Entity\\Galerie',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    'proprietes',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le type de propriété est obligatoire',
                    'Le type de propriété doit être Villa, Maison...',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'choices' => [
                    2 => [
                        'Villa',
                        'Appartement',
                        'Boutique',
                        'Maison',
                        'Entrepot',
                        'Ferme',
                        'Terrain',
                        'Lavage-auto',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_propriete',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'message' => [
                    1 => 'Le type de propriété est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_propriete',
                        'lecture_galerie',
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\TypePackageRepository',
                ],
                'attributes' => [
                    1 => [
                        'normalization_context' => [
                            'groups' => [
                                'lecture_typepackage',
                            ],
                        ],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_typepackage',
                        'lecture_package',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Choice'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Choice')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'choices' => [
                    1 => [
                        'Gratuit',
                        'Standard',
                        'Premium',
                        'Business',
                        'Sur mesure',
                    ],
                ],
                'message' => [
                    1 => 'Le nom du Package doit être \'Gratuit\', \'Standard\', \'Premium\', \'Business\' ou \'Sur mesure\'',
                    3 => 'Le nom du Type de package est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    3 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_typepackage',
                        'lecture_package',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'typePackage',
                ],
                'targetEntity' => [
                    'App\\Entity\\Package',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_typepackage',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'typePackage',
                ],
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\UserRepository',
                ],
                'attributes' => [
                    1 => [
                        'normalization_context' => [
                            'groups' => [
                                'lecture_user',
                            ],
                        ],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_user',
                        'lecture_propriete',
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    180,
                ],
                'unique' => [
                    true,
                ],
                'message' => [
                    2 => 'L\'email de l\'utilisateur est obligatoire',
                    'Le format de l\'adresse email doit etre valide',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_user',
                        'lecture_propriete',
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le nom de l\'utilisateur est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'maxMessage' => [
                    2 => 'Le nom de l\'utilsateur ne doit pas depasser 100 caractères',
                ],
                'minMessage' => [
                    2 => 'Le nom de l\'utilisateur doit avoir au moins 3 caractères',
                ],
                'max' => [
                    2 => 100,
                ],
                'min' => [
                    2 => 3,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_user',
                        'lecture_propriete',
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le prénom de l\'utilisateur est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                    [
                        'Default',
                    ],
                ],
                'maxMessage' => [
                    2 => 'Le prénom  de l\'utilsateur ne doit pas depasser 100 caractères',
                ],
                'minMessage' => [
                    2 => 'Le prénom  de l\'utilisateur doit avoir au moins 3 caractères',
                ],
                'max' => [
                    2 => 100,
                ],
                'min' => [
                    2 => 3,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    3 => [
                        'lecture_user',
                        'lecture_propriete',
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
        ],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'L\'adresse de l\'utilisateur est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le numéro de téléphone est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_user',
                        'lecture_propriete',
                        'lecture_facture',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'Le logo de l\'utilisateur est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'length' => [
                    191,
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'length' => [
                    191,
                ],
                'message' => [
                    1 => 'L\'accredidtation est obligatoire',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    2 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'nullable' => [
                    true,
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'user',
                ],
                'targetEntity' => [
                    'App\\Entity\\Propriete',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'json',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [],
        [
            $o[0],
        ],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Symfony\\Component\\Serializer\\Annotation\\Groups'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Annotation\\Groups')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiSubresource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiSubresource')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'user',
                ],
                'targetEntity' => [
                    'App\\Entity\\Facture',
                ],
            ],
            'Symfony\\Component\\Serializer\\Annotation\\Groups' => [
                'groups' => [
                    1 => [
                        'lecture_user',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\TypePackage',
                ],
                'inversedBy' => [
                    'users',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},

]];
